/*
 * generated by Xtext 2.13.0
 */
package org.xtext.example.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.projet.FUNCTION
import org.xtext.example.projet.PROGRAM
import org.xtext.example.services.ProjetGrammarAccess

class ProjetFormatter extends AbstractFormatter2 {
	
	@Inject extension ProjetGrammarAccess

	def dispatch void format(PROGRAM pROGRAM, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (FUNCTION fUNCTION : pROGRAM.getFunctions()) {
			fUNCTION.format;
		}
	}

	def dispatch void format(FUNCTION fUNCTION, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		fUNCTION.getDef.format;
	}
	
	// TODO: implement for DEFINITION, INPUTS, OUTPUTS, COMMANDS, IF_THEN, WHILE, FOR_LOOP, FOREACH, AFFECT, EXPRESSION, EXPRAND, EXPROR, EXPRNOT, EXPREQ, EXPRSIMPLE, LEXPR
}
